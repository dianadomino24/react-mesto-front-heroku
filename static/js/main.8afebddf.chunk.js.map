{"version":3,"sources":["images/logo.svg","images/success-icon.svg","images/fail-icon.svg","utils/utils.js","utils/api.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/FormValidator.js","components/PopupWithForm.js","components/PopupWithSubmit.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/RegisterLoginTemplate.js","hooks/useForm.js","components/Login.js","components/ProtectedRoute.js","components/Register.js","components/InfoTooltip.js","utils/auth.js","components/App.js","utils/token.js","serviceWorker.js","index.js"],"names":["module","exports","formSelectorsObj","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorActiveClass","controlSelector","BASE_URL","api","baseUrl","this","res","ok","json","Promise","reject","Error","status","label","fetch","concat","headers","Accept","authorization","localStorage","getItem","then","_getResponseData","item","method","body","JSON","stringify","title","cardId","notLiked","replaceItem","deleteItem","id","Header","onSignOut","email","userEmail","className","href","src","logoPath","alt","path","to","onClick","CurrentUserContext","React","createContext","Card","onCardClick","card","onCardLike","onCardDelete","owner","likes","name","link","currentUserData","useContext","isOwn","_id","cardLikeButtonClassName","some","evt","placeEvt","target","closest","length","Main","onEditProfile","onAddPlace","onEditAvatar","handleCardClick","cards","style","backgroundImage","avatar","about","map","key","Footer","FormValidator","formElement","_formSelectorsObj","_formElement","_inputList","Array","from","querySelectorAll","_buttonElement","querySelector","_inactiveButtonClass","_inputErrorClass","_errorActiveClass","_controlSelector","inputElement","errorMessage","errorElement","_findInputError","textContent","classList","add","remove","inputElementNoSpacing","value","trim","_isInputWithoutSpacingInvalid","validity","valid","_hideInputError","_showInputError","validationMessage","alert","hasInvalidInput","_toggleButtonState","forEach","addEventListener","_checkInputValidity","_setEventListeners","PopupWithForm","buttonText","isOpen","onClose","onSubmit","children","formValidate","currentForm","document","formValidator","enableValidation","closeReset","reset","window","removeEventListener","handleEscClose","event","currentTarget","noValidate","e","preventDefault","autoFocus","type","PopupWithSubmit","cardDOM","onCardDeleteSubmit","ImagePopup","close","EditProfilePopup","onUpdateUser","currentUser","useState","setName","description","setDescription","useEffect","onChange","placeholder","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarInput","useRef","current","ref","AddPlacePopup","cardName","setCardName","cardDescription","setCardDescription","RegisterLoginTemplate","useFormWithValidation","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","handleChange","replace","checkValidity","Login","onLogin","handleFormChange","password","disabled","ProtectedRoute","Component","component","props","loggedIn","Register","onRegister","InfoTooltip","isSuccess","success","fail","getResponseData","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardDeletePopupOpen","setIsCardDeletePopupOpen","isImgPopupOpen","setIsImgPopupOpen","isInfoTooltipOpen","setInfoTooltipOpen","setCards","setCurrentUser","selectedCard","setSelectedCard","selectedCardDOM","setSelectedCardDOM","setUserEmail","setLoggedIn","history","useHistory","setErrorMessage","registerSuccess","setRegisterSuccess","closeAllPopups","inputErrors","error","cleanInputErrors","renderLoading","isLoading","button","text","infoTooltipOpen","handleRegisterFail","all","getItems","userData","serverCards","items","catch","err","console","log","tokenCheck","token","jwt","Authorization","userCurrentEmail","push","Provider","removeItem","auth","message","data","setItem","isLiked","changeLikeCardStatus","newCard","newCards","c","cardDOMElement","profileSubmitButton","changeItem","finally","placeSubmitButton","createItem","avatarSubmitButton","cardDeleteSubmitButton","Boolean","location","hostname","match","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8afebddf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a56cd5e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/success-icon.7fc4c149.svg\";","module.exports = __webpack_public_path__ + \"static/media/fail-icon.c32299fa.svg\";","// объект настроек с селекторами и классами формы\nexport const formSelectorsObj = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__save-button',\n  inactiveButtonClass: 'popup__save-button_disabled',\n  inputErrorClass: '.popup__input-error',\n  errorActiveClass: 'popup__input-error_active',\n  controlSelector: '.popup__label',\n}\n\nexport const BASE_URL =\n  'https://react-mesto-api-heroku.herokuapp.com/'\n","import { BASE_URL } from './utils'\n\nclass Api {\n  constructor({ baseUrl }) {\n    this.baseUrl = baseUrl\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(new Error(`Error: ${res.status}`))\n  }\n\n  getItems(label) {\n    return fetch(this.baseUrl.concat(label), {\n      headers: {\n        Accept: 'application/json',\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json',\n      },\n    }).then((res) => this._getResponseData(res))\n  }\n\n  createItem(item, label) {\n    return fetch(this.baseUrl.concat(label), {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(item),\n    }).then((res) => this._getResponseData(res))\n  }\n\n  changeItem(item, title) {\n    return fetch(this.baseUrl.concat(title), {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json',\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(item),\n    }).then((res) => this._getResponseData(res))\n  }\n\n  changeLikeCardStatus(cardId, notLiked) {\n    if (notLiked) {\n      return this.replaceItem(`/cards/${cardId}/likes`, '')\n    }\n    return this.deleteItem(`/cards/${cardId}/likes`, '')\n  }\n\n  replaceItem(title, id) {\n    return fetch(this.baseUrl.concat(title).concat(`/${id}`), {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json',\n      },\n    }).then((res) => this._getResponseData(res))\n  }\n\n  deleteItem(title, id) {\n    return fetch(this.baseUrl.concat(title).concat(`/${id}`), {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json',\n      },\n    }).then((res) => this._getResponseData(res))\n  }\n}\n\nconst api = new Api({\n  baseUrl: BASE_URL,\n})\n\nexport default api\n\n// const token = '3829caf2-6683-412f-9e00-d0870fcd1817'\n// const cohort = 'cohort-14'\n\n//  - получить список всех карточек в виде массива (GET)\n//  - добавить карточку (POST)\n//  - удалить карточку (DELETE)\n//  - получить данные пользователя (GET)\n//  - заменить данные пользователя (PATCH)\n//  - заменить аватар (PATCH)\n//  - “залайкать” карточку (PUT)\n//  - удалить лайк карточки (DELETE)\n","import React from 'react'\nimport logoPath from '../images/logo.svg'\nimport { Route, Switch, Link } from 'react-router-dom'\n\nfunction Header({ onSignOut, userEmail }) {\n  const { email } = userEmail\n  return (\n    <header className=\"header page__header section\">\n      <a href=\"/\" className=\"logo header__logo\">\n        <img\n          className=\"logo__image\"\n          src={logoPath}\n          alt=\"Logo of project Mesto\"\n        />\n      </a>\n      <Switch>\n        <Route path=\"/sign-up\">\n          <Link to=\"./sign-in\" className=\"link header__link\">\n            Sign in\n          </Link>\n        </Route>\n        <Route path=\"/sign-in\">\n          <Link to=\"./sign-up\" className=\"link header__link\">\n            Sign up\n          </Link>\n        </Route>\n        <Route path=\"/\">\n          <div className=\"header__user-info\">\n            <p className=\"header__email\">{email}</p>\n            <button onClick={onSignOut} className=\"header__button\">\n              Quit\n            </button>\n          </div>\n        </Route>\n      </Switch>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const CurrentUserContext = React.createContext()\n","import React from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nexport default function Card({\n  onCardClick,\n  card,\n  onCardLike,\n  onCardDelete,\n  owner,\n  likes,\n  name,\n  link,\n}) {\n  // будет открывать попап с картинкой\n  function handleClick() {\n    onCardClick(card)\n  }\n  function handleLike() {\n    onCardLike(card)\n  }\n  function handleDelete(evt) {\n    //saves DOM element to remove it on delete\n    const placeEvt = evt.target.closest('.places__item')\n    onCardDelete(card, placeEvt)\n  }\n  const currentUserData = React.useContext(CurrentUserContext)\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = owner === currentUserData._id\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = likes.some((id) => id === currentUserData._id)\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = isLiked\n    ? 'place__like-button place__like-button_active'\n    : 'place__like-button'\n\n  return (\n    <li className=\"places__item\">\n      <figure className=\"place\">\n        {/* проверит, моя ли карточка и отключит кнопку удаления у чужих */}\n        <button\n          className={\n            isOwn\n              ? 'link place__delete-button'\n              : 'link place__delete-button place__delete-button_disabled'\n          }\n          onClick={handleDelete}\n        />\n        <img\n          src={link}\n          alt={name}\n          className=\"place__image\"\n          onClick={handleClick}\n        />\n        <div className=\"place__wrapper\">\n          <h2 className=\"place__name\">{name} </h2>\n          <button className=\"place__like-button-container\">\n            {/* проверит, залайкана ли мной ранее карточка*/}\n            <div className={cardLikeButtonClassName} onClick={handleLike}></div>\n            <div className=\"place__like-counter\">{likes.length}</div>\n          </button>\n        </div>\n      </figure>\n    </li>\n  )\n}\n","import React from 'react'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  handleCardClick,\n  cards,\n  onCardLike,\n  onCardDelete,\n  ...rest\n}) {\n  const currentUserData = React.useContext(CurrentUserContext)\n\n  return (\n    <main className=\"content page__content section\">\n      <section className=\"profile section\">\n        <div\n          className=\"profile__image\"\n          onClick={onEditAvatar}\n          style={{\n            backgroundImage: `url(${currentUserData.avatar})`,\n          }}\n        ></div>\n        <div className=\"profile__info\">\n          <div className=\"profile__name-wrap\">\n            <h1 className=\"profile__name\">{currentUserData.name}</h1>\n            <button\n              className=\"link profile__edit-button\"\n              onClick={onEditProfile}\n            />\n          </div>\n          <p className=\"profile__job\">{currentUserData.about}</p>\n        </div>\n        <button className=\"link profile__add-button\" onClick={onAddPlace} />\n      </section>\n      <section className=\"places section\">\n        <ul className=\"places__list\">\n          <li className=\"places__empty-list\">No places added</li>\n          {cards.map((card) => (\n            <Card\n              key={card._id}\n              onCardClick={handleCardClick}\n              card={card}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n              {...card}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  )\n}\n\nexport default Main\n\n// // для проверки, есть ли в списке картинки, если нет, то делает видимой надпись о пустом списке\n// //в placesList всегда есть минимум 1 элемент - надпись о пустом списке\n// function check() {\n//     const placesList = document.querySelector('.places__list')\n//     return (placesList.children.length === 1? \"places__empty-list places__empty-list_visible\" : \"places__empty-list\")\n// }\n","import React from 'react'\n\nfunction Footer() {\n  return (\n    <footer className=\"footer section page__footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","// кейсы проверки валидности\nconst VALID = 0\nconst INVALID_EMPTY = 1\nconst INVALID_TOOSHORT = 2\n\n// скрывает уведомления об ошибках в инпутах (используется на открытом попапе в index.js)\nexport function cleanInputErrors() {\n  const inputErrors = document.querySelectorAll('.popup__input-error')\n\n  if (inputErrors) {\n    inputErrors.forEach((error) =>\n      error.classList.remove('popup__input-error_active')\n    )\n  }\n}\n\nexport class FormValidator {\n  constructor(formSelectorsObj, formElement) {\n    this._formSelectorsObj = formSelectorsObj\n    this._formElement = formElement\n    this._inputList = Array.from(\n      formElement.querySelectorAll(formSelectorsObj.inputSelector)\n    )\n    this._buttonElement = formElement.querySelector(\n      formSelectorsObj.submitButtonSelector\n    )\n    this._inactiveButtonClass = formSelectorsObj.inactiveButtonClass\n    this._inputErrorClass = formSelectorsObj.inputErrorClass\n    this._errorActiveClass = formSelectorsObj.errorActiveClass\n    this._controlSelector = formSelectorsObj.controlSelector\n  }\n\n  // находит элемент ошибки в ближайшем к текущему инпуту лэйбле\n  _findInputError(inputElement) {\n    return inputElement\n      .closest(this._controlSelector)\n      .querySelector(this._inputErrorClass)\n  }\n\n  // показывает сообщение об ошибке\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._findInputError(inputElement)\n    errorElement.textContent = errorMessage\n    errorElement.classList.add(this._errorActiveClass)\n  }\n\n  // скрывает сообщение об ошибке\n  _hideInputError(inputElement) {\n    const errorElement = this._findInputError(inputElement)\n    errorElement.classList.remove(this._errorActiveClass)\n    errorElement.textContent = ''\n  }\n\n  // проверяет длину инпутов, очищенных от пробелов\n  _isInputWithoutSpacingInvalid(inputElement) {\n    const inputElementNoSpacing = inputElement.value.trim()\n\n    if (inputElementNoSpacing.length === 0) {\n      return INVALID_EMPTY\n    }\n    // если введено меньше 2 символов\n    if (inputElementNoSpacing.length < 2) {\n      return INVALID_TOOSHORT\n    }\n    return VALID\n  }\n\n  // проверяет валидность инпутов с учетом пробелов и выводит на стр соответствующие ошибки\n  _checkInputValidity(inputElement) {\n    const errorElement = this._findInputError(inputElement)\n\n    switch (this._isInputWithoutSpacingInvalid(inputElement)) {\n      // если поле пусто, не считая пробелы\n      case INVALID_EMPTY:\n        errorElement.textContent = 'Fill in this field.'\n        errorElement.classList.add(this._errorActiveClass)\n        break\n      // если выбросить пробелы и в поле 1 символ\n      case INVALID_TOOSHORT:\n        errorElement.textContent = 'The text must be at least 2 symbols.'\n        errorElement.classList.add(this._errorActiveClass)\n        break\n      // если без пробелов в поле 2 символа, то проверим их валидность\n      case VALID:\n        if (!inputElement.validity.valid) {\n          this._showInputError(inputElement, inputElement.validationMessage)\n        } else {\n          this._hideInputError(inputElement)\n        }\n        break\n\n      default:\n        alert('error')\n    }\n  }\n\n  // вернет true, если есть невалидный инпут (с учетом проверки пробелов)\n  hasInvalidInput() {\n    return this._inputList.some(\n      (inputElement) =>\n        !inputElement.validity.valid ||\n        this._isInputWithoutSpacingInvalid(inputElement)\n    )\n  }\n\n  // (раз)блокирует кнопку submit, если есть невалидные инпуты\n  _toggleButtonState() {\n    if (this.hasInvalidInput()) {\n      this._buttonElement.classList.add(this._inactiveButtonClass)\n    } else {\n      this._buttonElement.classList.remove(this._inactiveButtonClass)\n    }\n  }\n\n  _setEventListeners() {\n    // устанавливает состояние кнопки submit еще до изменения инпутов\n    this._toggleButtonState()\n    // прослушки для инпутов\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement)\n        this._toggleButtonState()\n      })\n    })\n  }\n\n  enableValidation() {\n    this._setEventListeners()\n  }\n}\n","import React from 'react'\nimport { formSelectorsObj } from '../utils/utils'\nimport { FormValidator } from './FormValidator'\n\nfunction PopupWithForm({\n  title,\n  name,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n  children,\n}) {\n  function formValidate() {\n    if (isOpen) {\n      const currentForm = document.querySelector(`.popup__form_type_${name}`)\n      // будет валидировать форму\n      const formValidator = new FormValidator(formSelectorsObj, currentForm)\n      formValidator.enableValidation()\n      return !formValidator.hasInvalidInput()\n    }\n  }\n  formValidate()\n\n  // очистит форму от введенного в инпут текста, ошибок валидации и закроет попап\n  function closeReset() {\n    document.querySelector(`.popup__form_type_${name}`).reset()\n    onClose()\n    window.removeEventListener('keydown', handleEscClose)\n  }\n  //закрывает при нажатии esc\n  function handleEscClose(evt) {\n    if (evt.key === 'Escape') {\n      closeReset()\n    }\n  }\n  //закрывает попап при нажатии на фон\n  function closePopupByClickingOverlay(event) {\n    if (event.target === event.currentTarget) {\n      closeReset()\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (formValidate()) {\n      onSubmit(e)\n      document.querySelector(`.popup__form_type_${name}`).reset()\n    }\n  }\n  // проверяет нажатие esc\n  if (isOpen) {\n    window.addEventListener('keydown', (evt) => handleEscClose(evt))\n  }\n\n  return (\n    <section\n      className={`popup popup_type_form popup_type_${name} ${\n        isOpen && 'popup_opened'\n      }`}\n      onClick={closePopupByClickingOverlay}\n    >\n      <div className=\"popup__container\">\n        <button className=\"link popup__close-button\" onClick={closeReset} />\n        <form\n          className={`popup__form popup__form_type_${name}`}\n          noValidate\n          name={name}\n          onSubmit={handleSubmit}\n        >\n          <h2 className=\"popup__title\">{title}</h2>\n          <fieldset className=\"popup__fieldset\">\n            {children}\n            <button\n              className={`link popup__save-button popup__save-button_type_${name}`}\n              autoFocus\n              type=\"submit\"\n            >\n              {buttonText}\n            </button>\n          </fieldset>\n        </form>\n      </div>\n    </section>\n  )\n}\n\nexport default PopupWithForm\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction PopupWithSubmit({\n  title,\n  name,\n  card,\n  cardDOM,\n  buttonText,\n  isOpen,\n  onClose,\n  onCardDeleteSubmit,\n}) {\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault()\n    onCardDeleteSubmit(card, cardDOM)\n  }\n  return (\n    <PopupWithForm\n      title={title}\n      name={name}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    ></PopupWithForm>\n  )\n}\n\nexport default PopupWithSubmit\n","import React from 'react'\n\nfunction ImagePopup({ card, onClose, isOpen, name }) {\n  function close() {\n    onClose()\n    window.removeEventListener('keydown', handleEscClose)\n  }\n  //закрывает при нажатии esc\n  function handleEscClose(evt) {\n    if (evt.key === 'Escape') {\n      close()\n    }\n  }\n  //закрывает попап при нажатии на фон\n  function closePopupByClickingOverlay(event) {\n    if (event.target === event.currentTarget) {\n      close()\n    }\n  }\n  if (isOpen) {\n    window.addEventListener('keydown', handleEscClose)\n  }\n\n  return (\n    <section\n      className={`popup popup_type_${name} ${isOpen && 'popup_opened'}\n                `}\n      onClick={closePopupByClickingOverlay}\n    >\n      <div className=\"popup__container-pic-zoom\">\n        <button className=\"link popup__close-button\" onClick={close} />\n        <figure className=\"picture-zoom\">\n          <img\n            src={card ? card.link : ''}\n            alt={card ? card.name : ''}\n            className=\"picture-zoom__img\"\n          />\n          <p className=\"picture-zoom__title\">{card ? card.name : ''}</p>\n        </figure>\n      </div>\n    </section>\n  )\n}\n\nexport default ImagePopup\n","import React, { useState, useEffect } from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  const currentUser = React.useContext(CurrentUserContext)\n\n  // для заполнения инпутов текущими данными пользователя\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  useEffect(() => {\n    setName(currentUser.name)\n    setDescription(currentUser.about)\n  }, [currentUser])\n  // при введении текста в инпут будет обновлять стейт\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleDescribChange(e) {\n    setDescription(e.target.value)\n  }\n\n  function handleClose() {\n    setName(currentUser.name)\n    setDescription(currentUser.about)\n\n    onClose()\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault()\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    })\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Update profile info\"\n      name=\"edit-profile\"\n      buttonText=\"Save\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"popup__label\">\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleNameChange}\n          name=\"profile-name\"\n          placeholder=\"Name\"\n          id=\"profile-name\"\n          className=\"input popup__input popup__input_type_name\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n        />\n        <span className=\"popup__input-error js-popup__input-error_type_profile\"></span>\n      </label>\n      <label className=\"popup__label\">\n        <input\n          type=\"text\"\n          value={description}\n          onChange={handleDescribChange}\n          name=\"profile-job\"\n          id=\"profile-job\"\n          placeholder=\"Job\"\n          className=\"input popup__input popup__input_type_job\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n        />\n        <span className=\"popup__input-error js-popup__input-error_type_profile\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup\n","import React, { useRef } from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const avatarInput = useRef({})\n\n  function handleSubmit(e) {\n    onUpdateAvatar({\n      avatar: avatarInput.current.value,\n    })\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Update avatar\"\n      name=\"edit-avatar\"\n      buttonText=\"Save\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"popup__label\">\n        <input\n          ref={avatarInput}\n          type=\"url\"\n          name=\"avatar\"\n          id=\"avatar\"\n          placeholder=\"Link\"\n          className=\"input popup__input popup__input_type_avatar\"\n          required\n        />\n        <span className=\"popup__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup\n","import React, { useState } from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  const [cardName, setCardName] = useState('')\n  const [cardDescription, setCardDescription] = useState('')\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    onAddPlace({\n      name: cardName,\n      link: cardDescription,\n    })\n    setCardName('')\n    setCardDescription('')\n  }\n\n  function handleNameChange(e) {\n    setCardName(e.target.value)\n  }\n  function handleDescibChange(e) {\n    setCardDescription(e.target.value)\n  }\n  function close() {\n    setCardName('')\n    setCardDescription('')\n    onClose()\n  }\n\n  return (\n    <PopupWithForm\n      title=\"New place\"\n      name=\"add-place\"\n      buttonText=\"Create\"\n      isOpen={isOpen}\n      onClose={close}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"popup__label\">\n        <input\n          type=\"text\"\n          value={cardName}\n          onChange={handleNameChange}\n          name=\"place-name\"\n          placeholder=\"Name\"\n          id=\"place-name\"\n          className=\"input popup__input popup__input_type_place-name\"\n          required\n          minLength=\"2\"\n          maxLength=\"30\"\n        />\n        <span className=\"popup__input-error\"></span>\n      </label>\n      <label className=\"popup__label\">\n        <input\n          type=\"url\"\n          value={cardDescription}\n          onChange={handleDescibChange}\n          name=\"place-pic\"\n          id=\"place-pic\"\n          placeholder=\"Link\"\n          className=\"input popup__input popup__input_type_place-pic\"\n          required\n        />\n        <span className=\"popup__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup\n","import React from 'react'\n// общий шаблон для форм регистрации и логина\nfunction RegisterLoginTemplate({ title, children, onSubmit }) {\n  return (\n    <>\n      <section className=\"popup__register-login\">\n        <section className=\"popup__container-register-login\">\n          <form className=\"popup__form\" noValidate onSubmit={onSubmit}>\n            <h2 className=\"popup__title popup__title_type_login\">{title}</h2>\n            <fieldset className=\"popup__fieldset\">{children}</fieldset>\n          </form>\n        </section>\n      </section>\n    </>\n  )\n}\n\nexport default RegisterLoginTemplate\n","import { useState, useCallback } from 'react'\n\nexport default function useFormWithValidation() {\n  const [values, setValues] = useState({})\n  const [errors, setErrors] = useState({})\n  const [isValid, setIsValid] = useState(false)\n\n  const handleChange = (evt) => {\n    const target = evt.target\n    const name = target.name\n    if (name == 'password') {\n      const value = target.value.trim().replace(/\\s/g,'')\n      setValues({ ...values, [name]: value })\n      setErrors({ ...errors, [name]: target.validationMessage })\n    } else {\n      const value = target.value.trim()\n      setValues({ ...values, [name]: value })\n      setErrors({ ...errors, [name]: target.validationMessage })\n    }\n    setIsValid(evt.target.closest('form').checkValidity())\n\n}\n  const resetForm = useCallback(() => {\n    setValues({})\n    setErrors({})\n    setIsValid(false)\n  }, [])\n\n  return { values, setValues, handleChange, errors, resetForm, isValid }\n}\n","import React, { useEffect } from 'react'\nimport RegisterLoginTemplate from './RegisterLoginTemplate'\nimport useFormWithValidation from '../hooks/useForm'\n\nconst Login = ({ onLogin }) => {\n  const {\n    values,\n    handleChange,\n    errors,\n    resetForm,\n    isValid,\n  } = useFormWithValidation()\n\n  const handleFormChange = (e) => {\n    handleChange(e)\n  }\n\n  useEffect(() => {\n    resetForm()\n  }, [resetForm])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const { email, password } = values\n    onLogin(email, password, resetForm)\n  }\n\n  return (\n    <div className=\"login\">\n      <RegisterLoginTemplate title=\"Sign in\" onSubmit={handleSubmit}>\n        <label className=\"popup__label\">\n          <input\n            type=\"email\"\n            value={values.email}\n            onChange={handleFormChange}\n            name=\"email\"\n            placeholder=\"Email\"\n            id=\"email\"\n            className=\"input popup__input popup__input_type_dark\"\n            required\n            minLength=\"2\"\n            maxLength=\"80\"\n          />\n          <span className=\"popup__input-error popup__input-error_active\">\n            {errors.email}\n          </span>\n        </label>\n        <label className=\"popup__label\">\n          <input\n            type=\"password\"\n            value={values.password}\n            onChange={handleFormChange}\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            className=\"input popup__input popup__input_type_dark\"\n            required\n            minLength=\"6\"\n            maxLength=\"15\"\n          />\n          <span className=\"popup__input-error popup__input-error_active\">\n            {errors.password}\n          </span>\n        </label>\n        <button\n          className=\"link popup__save-button popup__save-button_type_dark\"\n          autoFocus\n          type=\"submit\"\n          disabled={!isValid}\n        >\n          Enter\n        </button>\n      </RegisterLoginTemplate>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/sign-up\" />\n        )\n      }\n    </Route>\n  )\n}\n\nexport default ProtectedRoute\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport RegisterLoginTemplate from './RegisterLoginTemplate'\nimport useFormWithValidation from '../hooks/useForm'\n\nconst Register = ({ onRegister }) => {\n  const {\n    values,\n    handleChange,\n    errors,\n    resetForm,\n    isValid,\n  } = useFormWithValidation()\n\n  const handleFormChange = (e) => {\n    handleChange(e)\n  }\n  useEffect(() => {\n    resetForm()\n  }, [resetForm])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const { email, password } = values\n    onRegister(email, password, resetForm)\n\n  }\n\n  return (\n    <div className=\"register\">\n      <RegisterLoginTemplate title=\"Sign up\" onSubmit={handleSubmit}>\n        <label className=\"popup__label\">\n          <input\n            type=\"email\"\n            value={values.email  }\n            onChange={handleFormChange}\n            name=\"email\"\n            placeholder=\"Email\"\n            id=\"email\"\n            className=\"input popup__input popup__input_type_dark\"\n            required\n            minLength=\"2\"\n            maxLength=\"80\"\n          />\n          <span className=\"popup__input-error popup__input-error_active\">\n            {errors.email}\n          </span>\n        </label>\n        <label className=\"popup__label\">\n          <input\n            type=\"password\"\n            value={values.password }\n            onChange={handleFormChange}\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            className=\"input popup__input popup__input_type_dark\"\n            required\n            minLength=\"6\"\n            maxLength=\"15\"\n          />\n          <span className=\"popup__input-error popup__input-error_active\">\n            {errors.password}\n          </span>\n        </label>\n        <button\n          className=\"link popup__save-button popup__save-button_type_dark\"\n          autoFocus\n          type=\"submit\"\n          disabled={!isValid}\n        >\n          Sign up\n        </button>\n        <Link to=\"/sign-in\" className=\"link popup__login-link\">\n          Already signed up? Then enter.\n        </Link>\n      </RegisterLoginTemplate>\n    </div>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport success from '../images/success-icon.svg'\nimport fail from '../images/fail-icon.svg'\n\nfunction InfoTooltip({ isOpen, onClose, isSuccess, errorMessage }) {\n  // проверяет нажатие esc\n  if (isOpen) {\n    window.addEventListener('keydown', (evt) => handleEscClose(evt))\n  }\n  function closeReset() {\n    onClose()\n    window.removeEventListener('keydown', handleEscClose)\n  }\n  //закрывает при нажатии esc\n  function handleEscClose(evt) {\n    if (evt.key === 'Escape') {\n      closeReset()\n    }\n  }\n  //закрывает попап при нажатии на фон\n  function closePopupByClickingOverlay(event) {\n    if (event.target === event.currentTarget) {\n      closeReset()\n    }\n  }\n\n  return (\n    <>\n      <section\n        className={`popup popup_type_form ${isOpen && 'popup_opened'}`}\n        onClick={closePopupByClickingOverlay}\n      >\n        <div className=\"popup__container\">\n          {isSuccess ? (\n            <>\n              <img\n                src={success}\n                alt=\"Success\"\n                className=\"popup__infotool-img\"\n              />\n              <p className=\"popup__infotool-text\">Success!</p>\n            </>\n          ) : (\n            <>\n              <img src={fail} alt=\"Red cross\" className=\"popup__infotool-img\" />\n              <p className=\"popup__infotool-text\">\n                {errorMessage || 'Something went wrong, please, try again!'}\n              </p>\n            </>\n          )}\n          <button className=\"popup__close-button\" onClick={onClose}></button>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default InfoTooltip\n","import { BASE_URL } from './utils'\n\nconst getResponseData = (res) => {\n  return res.json().then((json) => {\n    return res.ok ? json : Promise.reject(json)\n  })\n}\n\nexport const register = (email, password) =>\n  fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => getResponseData(res))\n\nexport const authorize = (email, password) =>\n  fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => getResponseData(res))\n\nexport const getContent = (token) =>\n  fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => getResponseData(res))\n","import React, { useEffect, useState } from 'react'\nimport api from '../utils/api'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithSubmit from './PopupWithSubmit'\nimport ImagePopup from './ImagePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { cleanInputErrors } from './FormValidator'\nimport { Route, Switch, useHistory } from 'react-router-dom'\nimport Login from './Login'\nimport ProtectedRoute from './ProtectedRoute'\nimport Register from './Register'\nimport InfoTooltip from './InfoTooltip'\nimport * as auth from '../utils/auth.js'\nimport { getToken, removeToken } from '../utils/token'\nimport { setToken } from '../utils/token'\n\nfunction App() {\n  //popups states\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = useState(false)\n  const [isImgPopupOpen, setIsImgPopupOpen] = useState(false)\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false)\n\n  const [cards, setCards] = useState([])\n\n  const profileAvatarSelector = '.profile__image'\n  // Current user data (will show Jacques-Yves Cousteau before getting data from remote server)\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Jacques-Yves Cousteau',\n    about: 'Navigator',\n    avatar:\n      'https://kaskad.tv/images/2020/foto_zhak_iv_kusto__-_interesnie_fakti_20190810_2078596433.jpg',\n  })\n  // used for full-size picture popup\n  const [selectedCard, setSelectedCard] = useState()\n  // used for card deleteing\n  const [selectedCardDOM, setSelectedCardDOM] = useState()\n\n  const [userEmail, setUserEmail] = useState({ email: '' })\n  const [loggedIn, setLoggedIn] = useState(false)\n  const history = useHistory()\n  const [errorMessage, setErrorMessage] = useState('')\n  // for showing registration/login success state\n  const [registerSuccess, setRegisterSuccess] = useState(false)\n\n  // open popups\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  //для открытия попапа с увеличенной картинкой\n  function handleCardClick(card) {\n    setSelectedCard(card)\n    setIsImgPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    //убирает уведомления об ошибках от предыдущих инпутов\n    cleanInputErrors()\n\n    setIsEditAvatarPopupOpen(false)\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsCardDeletePopupOpen(false)\n    setIsImgPopupOpen(false)\n    setInfoTooltipOpen(false)\n  }\n\n  // on mounting will fetch api data on user and cards\n  useEffect(() => {\n    Promise.all([api.getItems('/users/me'), api.getItems('/cards')])\n      .then((values) => {\n        const [userData, serverCards] = values\n\n        setCurrentUser(userData)\n\n        const items = serverCards.map((item) => ({\n          name: item.name,\n          link: item.link,\n          _id: item._id,\n          likes: item.likes,\n          owner: item.owner,\n        }))\n        setCards(items)\n      })\n      .catch((err) => {\n        console.log(`When loading user and cards data: ${err}`)\n      })\n  }, [loggedIn])\n\n  // options for button text to show when data is being sent to server\n  const loadingText = 'Saving...'\n  const defaultSaveText = 'Save'\n  const defaultCreateText = 'Create'\n  const defaultYesText = 'Yes'\n  // replaces button text when loading data to server\n  function renderLoading(isLoading, button, text) {\n    if (isLoading) {\n      button.textContent = loadingText\n    } else {\n      button.textContent = text\n    }\n  }\n  function handleCardLike(card) {\n    // checks if like has already been put\n    const isLiked = card.likes.some((id) => id === currentUser._id)\n\n    // fetch new data about card state\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        // form a new array of cards with liked one\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c))\n        setCards(newCards)\n      })\n      .catch((err) => {\n        console.log(`On card like: ${err}`)\n      })\n  }\n\n  function handleCardDeleteSubmit(card, cardDOMElement) {\n    const cardDeleteSubmitButton = document.querySelector(\n      '.popup__save-button_type_card-delete'\n    )\n    // show loading process\n    renderLoading(true, cardDeleteSubmitButton, defaultYesText)\n    api\n      .deleteItem('/cards', card._id)\n      .then(() => {\n        // deletes card from DOM\n        cardDOMElement.remove()\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`On card delete: ${err}`)\n      })\n      .finally(() =>\n        renderLoading(false, cardDeleteSubmitButton, defaultYesText)\n      )\n  }\n\n  function handleCardDelete(card, cardDOMElement) {\n    setIsCardDeletePopupOpen(true)\n    setSelectedCard(card)\n    setSelectedCardDOM(cardDOMElement)\n  }\n\n  function handleUpdateUser(userData) {\n    const profileSubmitButton = document.querySelector(\n      '.popup__save-button_type_edit-profile'\n    )\n\n    renderLoading(true, profileSubmitButton, defaultSaveText)\n\n    api\n      .changeItem(\n        {\n          name: userData.name.trim(),\n          about: userData.about.trim(),\n        },\n        '/users/me'\n      )\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`On user data update: ${err}`)\n      })\n      .finally(() => {\n        renderLoading(false, profileSubmitButton, defaultSaveText)\n      })\n  }\n\n  function handleUpdateAvatar(userData) {\n    const avatarSubmitButton = document.querySelector(\n      '.popup__save-button_type_edit-avatar'\n    )\n    renderLoading(true, avatarSubmitButton, defaultSaveText)\n\n    api\n      .changeItem({ avatar: userData.avatar }, '/users/me/avatar')\n      .then((res) => {\n        //установим новые данные профиля\n        setCurrentUser(res)\n        // установим новый аватар в разметке\n        document.querySelector(\n          profileAvatarSelector\n        ).style.backgroundImage = `url('${res.avatar}')`\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`On avatar change: ${err}`)\n      })\n      .finally(() => {\n        renderLoading(false, avatarSubmitButton, defaultSaveText)\n      })\n  }\n  // adds new card\n  function handleAddPlaceSubmit(newCard) {\n    const placeSubmitButton = document.querySelector(\n      '.popup__save-button_type_add-place'\n    )\n    renderLoading(true, placeSubmitButton, defaultCreateText)\n\n    api\n      .createItem(newCard, '/cards')\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n      })\n      .then(() => {\n        closeAllPopups()\n      })\n      .catch((err) => {\n        console.log(`On card add: ${err}`)\n      })\n      .finally(() => {\n        renderLoading(false, placeSubmitButton, defaultCreateText)\n      })\n  }\n\n  function infoTooltipOpen() {\n    setInfoTooltipOpen(true)\n  }\n\n  function onSignOut() {\n    removeToken()\n    setLoggedIn(false)\n    history.push('/sign-in')\n  }\n\n  // const setUser = (evt) => {\n  //   const target = evt.target;\n  //   const name = target.name;\n  //   const value = target.value;\n  // };\n\n  function handleLogin(email, password, resetForm) {\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        if (!data) {\n          setErrorMessage('Something went wrong on authorization')\n          return false\n        }\n        if (data.token) {\n          setToken(data.token)\n          setErrorMessage('')\n          resetForm()\n          setUserEmail({ email: email })\n          setLoggedIn(true)\n          history.push('/')\n          return loggedIn\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(`Error: ${err.message}`)\n        handleRegisterFail()\n        infoTooltipOpen()\n        if (err.status === 401) {\n          return console.log(`User with this email is not found : ${err}`)\n        }\n        if (err.status === 400) {\n          return console.log(`One of the inputs is not filled in : ${err}`)\n        }\n        console.log(`App authorize Error: ${err.message}`)\n      })\n  }\n  function handleRegisterSuccess() {\n    setRegisterSuccess(true)\n  }\n  function handleRegisterFail() {\n    setRegisterSuccess(false)\n  }\n\n  function handleRegister(email, password, resetForm) {\n    auth\n      .register(email, password)\n      .then((res) => {\n        if (res) {\n          setErrorMessage('')\n          resetForm()\n          handleRegisterSuccess()\n          infoTooltipOpen()\n          history.push('/sign-in')\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(`Error: ${err.message}`)\n        handleRegisterFail()\n        infoTooltipOpen()\n        console.log(`App onRegister: ${err.message}`)\n      })\n  }\n\n  const tokenCheck = () => {\n    const jwt = getToken()\n\n    if (!jwt) {\n      return\n    }\n\n    auth\n      .getContent(jwt)\n      .then((res) => {\n        if (res) {\n          const userCurrentEmail = {\n            email: res.email,\n          }\n          setLoggedIn(true)\n          setUserEmail(userCurrentEmail)\n          history.push('/')\n        }\n      })\n      .catch((err) => {\n        console.log(`getContent: ${err}`)\n      })\n  }\n  // will check token on element mounting and route changing\n  useEffect(() => {\n    tokenCheck()\n  }, [loggedIn, history])\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__container\">\n        <CurrentUserContext.Provider value={currentUser}>\n          <Header onSignOut={onSignOut} userEmail={userEmail} />\n          <Switch>\n            <Route path=\"/sign-up\">\n              <Register onRegister={handleRegister} />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login onLogin={handleLogin} />\n            </Route>\n\n            <ProtectedRoute\n              path=\"/\"\n              loggedIn={loggedIn}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              handleCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              component={Main}\n            />\n          </Switch>\n\n          {loggedIn && <Footer />}\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            onClose={closeAllPopups}\n            isSuccess={registerSuccess}\n            errorMessage={errorMessage}\n          />\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <PopupWithSubmit\n            title=\"Are you sure?\"\n            name=\"card-delete\"\n            card={selectedCard}\n            cardDOM={selectedCardDOM}\n            buttonText=\"Yes\"\n            isOpen={isCardDeletePopupOpen}\n            onClose={closeAllPopups}\n            onCardDeleteSubmit={handleCardDeleteSubmit}\n          ></PopupWithSubmit>\n\n          <ImagePopup\n            name=\"picture-zoom\"\n            isOpen={isImgPopupOpen}\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n        </CurrentUserContext.Provider>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const TOKEN_KEY = 'jwt'\n\nexport const setToken = (token) => {\n  localStorage.setItem(TOKEN_KEY, token)\n}\n\nexport const getToken = () => localStorage.getItem(TOKEN_KEY)\n\nexport const removeToken = () => {\n  localStorage.removeItem(TOKEN_KEY)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/react-mesto-front-heroku\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}